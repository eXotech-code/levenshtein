{"version":3,"sources":["media/arrow-right.svg","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["_defs","_polygon","_rect","Button","props","sizeRef","React","createRef","className","this","variant","ref","onClick","action","children","Component","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowRight","_ref","svgRef","title","titleId","id","xmlns","width","height","viewBox","points","ForwardRef","Input","name","type","value","onChange","handler","toLowerCase","placeholder","Form","string1","changeHandler","string2","buttonAction","App","state","result","handleChange","bind","driverFunc","resTab","Array","e","setState","st1","st2","compareDistance","substring","Math","min","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4094eda6.chunk.js","sourcesContent":["var _defs, _polygon, _rect;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\n      .cls-1 {\\n        fill: none;\\n      }\\n    \"))), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"18 6 16.57 7.393 24.15 15 4 15 4 17 24.15 17 16.57 24.573 18 26 28 16 18 6\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"_Transparent_Rectangle_\",\n    \"data-name\": \"<Transparent Rectangle>\",\n    className: \"cls-1\",\n    width: 32,\n    height: 32\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.ec00b28e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './Button.scss';\n\nclass Button extends React.Component {\n    constructor(props) {\n      super(props);\n      this.sizeRef = React.createRef();\n    }\n  \n    render() {\n      let className = \"button-primary\";\n  \n      if (this.props.variant) {\n        className = \"button-\" + this.props.variant;\n      }\n  \n      return (\n        <button className={className} ref={this.sizeRef} onClick={this.props.action}>\n            {this.props.children}\n        </button>\n      );\n    }\n}\n\nexport default Button;","import React from \"react\";\nimport Button from \"./components/Button\";\nimport {ReactComponent as RightArrow} from './media/arrow-right.svg'\nimport './App.scss';\n\nconst Input = (props) => {\n    return (\n        <div>\n            <label>\n                {props.name}\n                <input\n                    type={\"text\"}\n                    value={props.value}\n                    onChange={props.handler}\n                    name={props.name.toLowerCase()}\n                    placeholder={props.placeholder}\n                />\n            </label>\n        </div>\n    )\n}\n\nconst Form = (props) => {\n        return (\n                <div className=\"form\">\n\n                    <div className=\"name-section\">\n                        <h1>Levenshteino-inator</h1>\n                        <h3>(naiwna wersja rekursywna)</h3>\n                        <p>Wyznacz odległości między dwoma napisami</p>\n                    </div>\n\n                    <div className=\"input-area\">\n                        <Input\n                            name=\"Napis 1\"\n                            value={props.string1}\n                            handler={props.changeHandler}\n                            placeholder=\"Wymyśl coś ciekawego\"\n                        />\n                        <Input\n                            name=\"Napis 2\"\n                            value={props.string2}\n                            handler={props.changeHandler}\n                            placeholder=\"Napis do porównania\"\n                        />\n                    </div>\n\n                    <div className=\"login-form-button-area\">\n                        <Button action={props.buttonAction}>\n                            Porównaj\n                            <RightArrow />\n                        </Button>\n                    </div>\n                </div>\n        )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      string1: '',\n      string2: '',\n      result: 0\n    }\n\n    // To get rid of the 'this is undefined' errors.\n    this.handleChange = this.handleChange.bind(this);\n    this.driverFunc = this.driverFunc.bind(this);\n  }\n\n  // Generates a dummy placeholder table on initial page load.\n  tableGen() {\n    let resTab = new Array(6);\n\n    for (let i = 0; i <= resTab.length; i++) {\n      resTab[i] = new Array(5);\n    }\n\n    return resTab;\n  }\n\n  // Handles change on input and saves it into state.\n  handleChange(e) {\n    /* Set state of username or password according to\n     which field is being typed into. */\n\n    if (e.target.name === 'napis 1') {\n      this.setState({ string1: e.target.value });\n    } else {\n      this.setState({ string2: e.target.value });\n    }\n  }\n\n  // Function that compares distance according to Levenshtein's method.\n  /*\n   * This is the naive recursive approach - a direct\n   * implementation of definition of the Levenshtein\n   * distance metric.\n   */\n  compareDistance(st1, st2) {\n    // Resulting distance\n    let d = 0;\n\n    /* If the length of string 1 is 0, then the distance between strings\n     * length of string 2. */\n    if (st1.length === 0) {return st2.length}\n    if (st2.length === 0) {return st1.length}\n\n    /* If both strings start with the same char, call Levenshtein function\n     * recursively but without the first character. */\n    if (st1[0] === st2[0]) {\n      d = this.compareDistance(st1.substring(1), st2.substring(1));\n    } else {\n      d = 1 + Math.min(\n        this.compareDistance(st1.substring(1), st2), // Insertion\n        this.compareDistance(st1, st2.substring(1)), // Deletion\n        this.compareDistance(st1.substring(1), st2.substring(1)) // Substitution\n      );\n    }\n\n    return d;\n  }\n\n  driverFunc() {\n    this.setState({result: this.compareDistance(this.state.string1, this.state.string2)});\n  }\n\n  render() {\n    return (\n      <div className={\"App\"}>\n        <Form\n          string1={this.state.string1}\n          string2={this.state.string2}\n          changeHandler={this.handleChange}\n          buttonAction={this.driverFunc}\n        />\n        <div className={\"result\"}>\n          <div className={\"numerical-result\"}>\n            <p>Odległość między napisami wynosi:</p>\n            <h1>{this.state.result}</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}